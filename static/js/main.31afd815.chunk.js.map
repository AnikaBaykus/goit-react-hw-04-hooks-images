{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/Modal/Modal.module.css","components/SearchBar/SearchBar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/SearchForm/SearchForm.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/LoaderMy.jsx","components/Button/Button.jsx","services/image-api.js","components/Modal/Modal.jsx","components/ImageInfo.jsx","components/App.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","options","useState","imageName","setImageName","onSubmit","event","preventDefault","trim","onSearchFormSubmit","toast","warn","className","s","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","SearchBar","protoTypes","PropTypes","func","isRequired","ImageGalleryItem","webformatURL","tags","largeImageURL","onClickImage","onClick","src","alt","ImageGalleryItemImage","longdesc","ImageGallery","hits","map","id","LoaderMy","Loader","Spinner","color","height","width","timeout","Component","Button","onLoadMore","imageAPI","fetchImage","name","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","onCloseModal","useEffect","handleKeyDown","code","window","removeEventListener","addEventListener","createPortal","Overlay","target","ImageInfo","setHits","error","setError","status","setStatus","showModal","setShowModal","setAlt","setSrc","setPage","isLoading","setIsLoading","image","fetchImg","console","log","state","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","altImage","srcImage","longDesc","length","message","App","data","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31afd815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1iugG\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2XWML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__2UoQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1nCwa\",\"Modal\":\"Modal_Modal__10XA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3wMDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3Plot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3kXv-\"};","import s from './SearchForm.module.css';\n\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function SearchForm(options) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.warn('😰 Nothing found, please specify your request 😵');\n      return;\n    }\n    options.onSearchFormSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.SearchForm}>\n      <button type=\"submit\" className={s.SearchFormButton}>\n        <span className={s.SearchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={s.SearchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        value={imageName}\n        onChange={handleNameChange}\n      />\n    </form>\n  );\n}\n\n// export default class SearchForm extends Component {\n//   state = {\n//     imageName: '',\n//   };\n\n//   handleNameChange = event => {\n//     this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     if (this.state.imageName.trim() === '') {\n//       toast.warn('😰 Nothing found, please specify your request 😵');\n//       return;\n//     }\n//     this.props.onSearchFormSubmit(this.state.imageName);\n//     this.setState({ imageName: '' });\n//   };\n\n//   render() {\n//     const { handleSubmit, handleNameChange } = this;\n//     const { imageName } = this.state;\n//     return (\n//       <form onSubmit={handleSubmit} className={s.SearchForm}>\n//         <button type=\"submit\" className={s.SearchFormButton}>\n//           <span className={s.SearchFormButtonLabel}>Search</span>\n//         </button>\n\n//         <input\n//           className={s.SearchFormInput}\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search images and photos\"\n//           value={imageName}\n//           onChange={handleNameChange}\n//         />\n//       </form>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport SearchForm from '../SearchForm/SearchForm';\nimport s from './SearchBar.module.css';\n\nfunction SearchBar({ onSearchFormSubmit }) {\n  return (\n    <header className={s.SearchBar}>\n      <SearchForm onSearchFormSubmit={onSearchFormSubmit} />\n    </header>\n  );\n}\n\nSearchBar.protoTypes = {\n  onSearchFormSubmit: PropTypes.func.isRequired,\n};\nexport default SearchBar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ webformatURL, tags, largeImageURL, onClickImage }) {\n  return (\n    <li className={s.ImageGalleryItem} onClick={onClickImage}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.ImageGalleryItemImage}\n        longdesc={largeImageURL}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ hits, onClickImage }) {\n  // console.log(hits);\n  return (\n    <ul className={s.ImageGallery}>\n      {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          tags={tags}\n          onClickImage={onClickImage}\n          largeImageURL={largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n}\nImageGallery.propTypes = {\n  hits: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  onClickImage: PropTypes.func,\n};\nexport default ImageGallery;\n","import { Component } from 'react';\nimport s from './Loader.module.css';\nimport Loader from 'react-loader-spinner';\n\nexport default class LoaderMy extends Component {\n  render() {\n    return (\n      <div className={s.Loader}>\n        <Loader\n          className={s.Spinner}\n          type=\"Rings\"\n          color=\"#3f51b5\"\n          height={100}\n          width={100}\n          timeout={5000}\n        />\n      </div>\n    );\n  }\n}\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\nexport default Button;\n","const BASE_URL = 'https://pixabay.com/api/';\nconst PER_PAGE = 12;\nconst KEY = '22247215-1c12035fc4e9317ec5669aed6';\n\nfunction fetchImage(name, page) {\n  return fetch(\n    `${BASE_URL}?q=${name}&key=${KEY}&image_type=photo&orientation=horizontal&page=${page}&per_page=${PER_PAGE}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`❗ Not found ${name}`));\n  });\n}\n\nconst imageAPI = { fetchImage };\nexport default imageAPI;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(options) {\n  const { alt, src, onCloseModal } = options;\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n    window.removeEventListener('keydown', handleKeyDown);\n    return () => {\n      window.addEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleOverlay = event => {\n    if (event.target === event.currentTarget) {\n      onCloseModal();\n    }\n    return;\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleOverlay}>\n      <div className={s.Modal}>\n        <img src={src} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n","import { useEffect, useState } from 'react';\nimport ImageGallery from './ImageGallery';\nimport LoaderMy from './Loader/LoaderMy';\nimport { toast } from 'react-toastify';\nimport Button from './Button';\nimport imageAPI from '../services/image-api.js';\nimport Modal from './Modal/Modal.jsx';\n\nexport default function ImageInfo(options) {\n  const [hits, setHits] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n  const [alt, setAlt] = useState('');\n  const [src, setSrc] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState('');\n\n  const image = options.imageName;\n  // console.log(image);\n\n  useEffect(() => {\n    if (image === '') {\n      console.log(image);\n      return;\n    }\n    setHits([]);\n    setStatus('pending');\n    fetchImg();\n  }, [image]);\n\n  const fetchImg = () => {\n    console.log(page, image, hits, isLoading);\n    if (image === '') {\n      return;\n    }\n    setIsLoading(true);\n\n    imageAPI\n      .fetchImage(options.imageName, page)\n      .then(({ hits }) => {\n        console.log(hits);\n        setHits(state => [...state, ...hits]);\n        setStatus('resolve');\n        setPage(state => state + 1);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const openImage = event => {\n    const altImage = event.target.alt;\n    const srcImage = event.target.longDesc;\n    setAlt(altImage);\n    setSrc(srcImage);\n    toggleModal();\n  };\n\n  if (status === 'idle') {\n    return <div></div>;\n  }\n  if (status === 'pending') {\n    return <LoaderMy />;\n  }\n  if (status === 'resolve') {\n    return (\n      <div>\n        <ImageGallery hits={hits} onClickImage={openImage} />\n        {isLoading === true && <LoaderMy />}\n\n        {hits.length !== 0 && <Button onLoadMore={fetchImg} />}\n        {showModal && (\n          <Modal\n            src={src}\n            alt={alt}\n            onCloseModal={toggleModal}\n            showModal={showModal}\n          />\n        )}\n      </div>\n    );\n  }\n  if (status === 'rejected') {\n    return toast.error(error.message);\n  }\n}\n","import './App.css';\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SearchBar from './SearchBar';\nimport ImageInfo from './ImageInfo';\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n\n  const handleSearchFormSubmit = data => {\n    setImageName(data.trim());\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSearchFormSubmit={handleSearchFormSubmit} />\n\n      <ImageInfo imageName={imageName} />\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </div>\n  );\n}\n\n// export class App extends Component {\n//   state = {\n//     imageName: '',\n//   };\n\n//   handleSearchFormSubmit = data => {\n//     this.setState({ imageName: data.trim() });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <SearchBar onSearchFormSubmit={this.handleSearchFormSubmit} />\n\n//         <ImageInfo imageName={this.state.imageName} />\n\n//         <ToastContainer\n//           position=\"top-center\"\n//           autoClose={2000}\n//           hideProgressBar={false}\n//           newestOnTop={false}\n//           closeOnClick\n//           rtl={false}\n//           pauseOnFocusLoss\n//           draggable\n//           pauseOnHover\n//           theme=\"colored\"\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__35Pfs\",\"SearchFormButton\":\"SearchForm_SearchFormButton__2Gawv\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__uoh8L\",\"SearchFormInput\":\"SearchForm_SearchFormInput__1GTGv\"};"],"sourceRoot":""}